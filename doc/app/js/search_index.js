var search_data = {"index":{"searchIndex":["adminuser","allergen","allergenscontroller","allergensingredient","allergensingredientscontroller","applicationcontroller","applicationhelper","applicationpolicy","appointment","appointmentscontroller","appointmentshelper","article","articlescontroller","articleshelper","availabilitiescontroller","availabilitieshelper","availability","characteristic","characteristicscontroller","characteristicshelper","chargescontroller","chargeshelper","contentquota","contentquotahelper","contentquotascontroller","dashboardcontroller","devisehelper","dietitian","dietitians","registrationscontroller","familiescontroller","familieshelper","family","homecontroller","homehelper","image","imageuploader","imagescontroller","imageshelper","ingredient","ingredientscontroller","ingredientshelper","ingredientsrecipe","ingredientsrecipescontroller","ingredientsrecipeshelper","landingpagescontroller","landingpageshelper","marketingitem","marketingitemscontroller","memberplan","memberplanscontroller","memberplanshelper","object","patientgroup","patientgroupscontroller","patientgroupshelper","plan","planscontroller","planshelper","qualityreview","qualityreviewpolicy","qualityreviewscontroller","qualityreviewshelper","question","questionscontroller","questionshelper","recipe","recipecontroller","recipehelper","recipepolicy","recipestep","recipestepscontroller","recipescontroller","recipeshelper","reviewconflict","reviewconflictscontroller","role","rolescontroller","roleshelper","room","roomscontroller","stepshelper","subscription","subscriptionscontroller","subscriptionshelper","survey","surveyhelper","surveyscontroller","timeslot","timeslotscontroller","timeslotshelper","user","userfamily","userhelper","userrole","users","registrationscontroller","welcomecontroller","welcomehelper","accept_review_conflict()","account_update_params()","add_marketing()","after_inactive_sign_up_path_for()","after_sign_in_path_for()","after_sign_up_path_for()","after_sign_up_path_for()","after_update_path_for()","after_update_path_for()","age()","ages()","all_first_names()","all_in_first_tier_review()","all_in_second_tier_review()","all_ingredient_display_names()","all_live_recipes()","all_need_first_tier_review()","all_need_original_review()","all_need_second_tier_review()","all_recipe_names()","allergens()","allergens_array()","allergens_changes_hash()","allergies()","allergies()","allergies()","allergies_with_other()","appointment_prep()","appointment_review()","as_json()","assign_content()","assign_reviewer()","assigned_to_dietitian()","assignments()","authenticate_scope!()","autosave_associated_records_for_ingredient()","available_dietitians()","available_time_slots()","between()","build_resource()","cancel()","cancel_related_time_slots()","cancel_related_time_slots()","clear_uploader()","common_allergens()","complete_appt_prep_survey()","complete_recipe()","complete_review()","completed_quality_reviews()","configure_permitted_parameters()","configure_permitted_parameters()","conflicts_cleared?()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_appointment_request_times()","create_from_availabilities()","create_from_availability()","create_from_availability()","create_from_existing()","crop()","crop()","data_by_dietitian()","data_by_health_group()","data_by_total()","decline_review_conflict()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","devise_error_messages!()","dietitian_recipes_index()","discount_landing_page()","diseases()","diseases()","diseases()","diseases_with_other()","do_somthing!()","do_somthing!()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit_allergens()","edit_assignments()","edit_patient_groups()","edit_recipe_categories()","edit_recipe_group()","edit_review_conflict()","email_required?()","end_appointment()","extension_white_list()","family_member_count()","fetch_categories_array()","fetch_health_groups_array()","fetch_ingredients_allergens_hash()","fetch_possible_review_conflicts()","find_or_create_allergen()","find_or_create_ingredient()","first_tier_not_resolved()","format_date()","full_name()","full_step()","generate_for_appointment()","generate_for_follow_up()","generate_for_post_appointment()","generate_for_user()","get_family!()","get_incomplete_quality_reviews!()","get_ingredients!()","get_patient_groups!()","get_previous_appointments!()","get_recipe!()","get_recipe_characteristics!()","get_recipe_list!()","get_recipe_list_by_groups!()","get_recipe_list_from_group_by_meal!()","get_recipe_steps!()","get_started()","get_units!()","get_upcoming_appointment!()","get_upcoming_appointments!()","get_user_allergens!()","get_user_ingredients!()","get_user_patient_groups!()","half_hour_time_slots_available()","health_group_array()","health_groups()","health_groups_changes_array()","height()","height_hash()","home()","home()","home_page()","in_review_by_risk_level()","in_session()","incomplete_quality_reviews()","incomplete_recipes()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","ingredient_changes_hash()","ingredient_count()","ingredient_with_full_name()","ingredients_full_names()","ingredients_not_tagged()","ingredients_tagged()","intolerances()","intolerances()","intolerances()","intolerances_with_other()","is_last_vacant_time_slot?()","join()","loss_calendar_slots()","loss_time_slots()","made_for()","main_avatar()","marketing_items_by_group()","need_allergens?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_appointment_request_times()","no_first_name()","number_of_reviewers_hash()","online?()","ordered_ingredients()","other_allergens()","password_required?()","prep_complete?()","provider3126()","provider9172()","purchase()","qol()","recipe_categories_changes_array()","recipe_data()","recipe_ingredients_full_names()","recipe_name()","recipe_status()","related_time_slots()","related_time_slots_count()","remove_member()","review_recipe()","review_tier()","safe_allergy_groups()","safe_disease_groups()","safe_intolerance_groups()","second_tier_not_resolved()","select_appointment_time_slots()","select_reviewer()","select_time()","set_schedule()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","sign_up()","sign_up()","sign_up_params()","sign_up_params()","sign_up_stage()","singular_possessive()","sort()","sort()","split_allergen_by_word()","split_ingredient_by_word()","stage()","start_review()","start_review_conflict()","step_changes_hash()","steps()","steps_by_group()","store_dir()","suggested_allergens()","to_csv()","to_csv()","top_allergens()","unverified_health_groups()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update_allergens()","update_assignments()","update_needs_confirmation?()","update_patient_groups()","update_recipe_categories()","update_resource()","update_schedule()","update_with_payment()","uppercase_name()","weight()","weight_hash()","readme"],"longSearchIndex":["adminuser","allergen","allergenscontroller","allergensingredient","allergensingredientscontroller","applicationcontroller","applicationhelper","applicationpolicy","appointment","appointmentscontroller","appointmentshelper","article","articlescontroller","articleshelper","availabilitiescontroller","availabilitieshelper","availability","characteristic","characteristicscontroller","characteristicshelper","chargescontroller","chargeshelper","contentquota","contentquotahelper","contentquotascontroller","dashboardcontroller","devisehelper","dietitian","dietitians","dietitians::registrationscontroller","familiescontroller","familieshelper","family","homecontroller","homehelper","image","imageuploader","imagescontroller","imageshelper","ingredient","ingredientscontroller","ingredientshelper","ingredientsrecipe","ingredientsrecipescontroller","ingredientsrecipeshelper","landingpagescontroller","landingpageshelper","marketingitem","marketingitemscontroller","memberplan","memberplanscontroller","memberplanshelper","object","patientgroup","patientgroupscontroller","patientgroupshelper","plan","planscontroller","planshelper","qualityreview","qualityreviewpolicy","qualityreviewscontroller","qualityreviewshelper","question","questionscontroller","questionshelper","recipe","recipecontroller","recipehelper","recipepolicy","recipestep","recipestepscontroller","recipescontroller","recipeshelper","reviewconflict","reviewconflictscontroller","role","rolescontroller","roleshelper","room","roomscontroller","stepshelper","subscription","subscriptionscontroller","subscriptionshelper","survey","surveyhelper","surveyscontroller","timeslot","timeslotscontroller","timeslotshelper","user","userfamily","userhelper","userrole","users","users::registrationscontroller","welcomecontroller","welcomehelper","reviewconflictscontroller#accept_review_conflict()","dietitians::registrationscontroller#account_update_params()","articlescontroller#add_marketing()","dietitians::registrationscontroller#after_inactive_sign_up_path_for()","applicationcontroller#after_sign_in_path_for()","dietitians::registrationscontroller#after_sign_up_path_for()","users::registrationscontroller#after_sign_up_path_for()","dietitians::registrationscontroller#after_update_path_for()","users::registrationscontroller#after_update_path_for()","user#age()","family#ages()","family#all_first_names()","recipe::all_in_first_tier_review()","recipe::all_in_second_tier_review()","ingredientsrecipe::all_ingredient_display_names()","recipe::all_live_recipes()","recipe::all_need_first_tier_review()","recipe::all_need_original_review()","recipe::all_need_second_tier_review()","recipe::all_recipe_names()","recipe#allergens()","ingredient#allergens_array()","reviewconflict#allergens_changes_hash()","article#allergies()","patientgroup::allergies()","recipe#allergies()","patientgroup::allergies_with_other()","appointmentscontroller#appointment_prep()","appointmentscontroller#appointment_review()","timeslot#as_json()","contentquotascontroller#assign_content()","reviewconflictscontroller#assign_reviewer()","reviewconflict::assigned_to_dietitian()","rolescontroller#assignments()","dietitians::registrationscontroller#authenticate_scope!()","ingredientsrecipe#autosave_associated_records_for_ingredient()","appointment#available_dietitians()","appointment#available_time_slots()","timeslot::between()","dietitians::registrationscontroller#build_resource()","dietitians::registrationscontroller#cancel()","availability#cancel_related_time_slots()","timeslot::cancel_related_time_slots()","imageuploader#clear_uploader()","allergen::common_allergens()","appointmentscontroller#complete_appt_prep_survey()","recipescontroller#complete_recipe()","qualityreviewscontroller#complete_review()","dietitian#completed_quality_reviews()","dietitians::registrationscontroller#configure_permitted_parameters()","users::registrationscontroller#configure_permitted_parameters()","qualityreview#conflicts_cleared?()","allergenscontroller#create()","allergensingredientscontroller#create()","appointmentscontroller#create()","articlescontroller#create()","availabilitiescontroller#create()","characteristicscontroller#create()","chargescontroller#create()","contentquotascontroller#create()","dietitians::registrationscontroller#create()","familiescontroller#create()","imagescontroller#create()","ingredientsrecipescontroller#create()","marketingitemscontroller#create()","memberplanscontroller#create()","patientgroupscontroller#create()","planscontroller#create()","qualityreviewscontroller#create()","questionscontroller#create()","recipestepscontroller#create()","recipescontroller#create()","reviewconflictscontroller#create()","rolescontroller#create()","roomscontroller#create()","subscriptionscontroller#create()","surveyscontroller#create()","timeslotscontroller#create()","appointmentscontroller#create_appointment_request_times()","timeslot::create_from_availabilities()","timeslot::create_from_availability()","timeslotscontroller#create_from_availability()","timeslotscontroller#create_from_existing()","imageuploader#crop()","imagescontroller#crop()","recipe::data_by_dietitian()","recipe::data_by_health_group()","recipe::data_by_total()","reviewconflictscontroller#decline_review_conflict()","allergensingredientscontroller#destroy()","appointmentscontroller#destroy()","articlescontroller#destroy()","availabilitiescontroller#destroy()","contentquotascontroller#destroy()","dietitians::registrationscontroller#destroy()","familiescontroller#destroy()","ingredientsrecipescontroller#destroy()","memberplanscontroller#destroy()","patientgroupscontroller#destroy()","planscontroller#destroy()","questionscontroller#destroy()","recipestepscontroller#destroy()","recipescontroller#destroy()","rolescontroller#destroy()","subscriptionscontroller#destroy()","timeslotscontroller#destroy()","devisehelper#devise_error_messages!()","recipescontroller#dietitian_recipes_index()","homecontroller#discount_landing_page()","article#diseases()","patientgroup::diseases()","recipe#diseases()","patientgroup::diseases_with_other()","characteristicshelper#do_somthing!()","stepshelper#do_somthing!()","allergenscontroller#edit()","allergensingredientscontroller#edit()","appointmentscontroller#edit()","articlescontroller#edit()","availabilitiescontroller#edit()","characteristicscontroller#edit()","contentquotascontroller#edit()","dietitians::registrationscontroller#edit()","familiescontroller#edit()","imagescontroller#edit()","ingredientscontroller#edit()","ingredientsrecipescontroller#edit()","marketingitemscontroller#edit()","memberplanscontroller#edit()","patientgroupscontroller#edit()","planscontroller#edit()","qualityreviewscontroller#edit()","questionscontroller#edit()","recipestepscontroller#edit()","recipescontroller#edit()","reviewconflictscontroller#edit()","rolescontroller#edit()","subscriptionscontroller#edit()","surveyscontroller#edit()","timeslotscontroller#edit()","ingredientscontroller#edit_allergens()","rolescontroller#edit_assignments()","recipescontroller#edit_patient_groups()","recipescontroller#edit_recipe_categories()","recipescontroller#edit_recipe_group()","reviewconflictscontroller#edit_review_conflict()","user#email_required?()","appointmentscontroller#end_appointment()","imageuploader#extension_white_list()","family#family_member_count()","recipe#fetch_categories_array()","recipe#fetch_health_groups_array()","recipe#fetch_ingredients_allergens_hash()","recipe#fetch_possible_review_conflicts()","allergen::find_or_create_allergen()","ingredientsrecipe#find_or_create_ingredient()","recipe::first_tier_not_resolved()","timeslot::format_date()","ingredientsrecipe#full_name()","recipestep#full_step()","survey::generate_for_appointment()","survey::generate_for_follow_up()","survey::generate_for_post_appointment()","survey::generate_for_user()","familieshelper#get_family!()","qualityreviewshelper#get_incomplete_quality_reviews!()","ingredientshelper#get_ingredients!()","patientgroupshelper#get_patient_groups!()","appointmentshelper#get_previous_appointments!()","recipeshelper#get_recipe!()","characteristicshelper#get_recipe_characteristics!()","recipeshelper#get_recipe_list!()","recipeshelper#get_recipe_list_by_groups!()","recipeshelper#get_recipe_list_from_group_by_meal!()","stepshelper#get_recipe_steps!()","welcomecontroller#get_started()","ingredientsrecipeshelper#get_units!()","appointmentshelper#get_upcoming_appointment!()","appointmentshelper#get_upcoming_appointments!()","userhelper#get_user_allergens!()","userhelper#get_user_ingredients!()","userhelper#get_user_patient_groups!()","dietitian#half_hour_time_slots_available()","qualityreview#health_group_array()","family#health_groups()","reviewconflict#health_groups_changes_array()","user#height()","user#height_hash()","dashboardcontroller#home()","welcomecontroller#home()","homecontroller#home_page()","reviewconflict::in_review_by_risk_level()","roomscontroller#in_session()","dietitian#incomplete_quality_reviews()","dietitian#incomplete_recipes()","allergenscontroller#index()","allergensingredientscontroller#index()","appointmentscontroller#index()","articlescontroller#index()","availabilitiescontroller#index()","characteristicscontroller#index()","contentquotascontroller#index()","dashboardcontroller#index()","familiescontroller#index()","homecontroller#index()","imagescontroller#index()","ingredientscontroller#index()","landingpagescontroller#index()","marketingitemscontroller#index()","memberplanscontroller#index()","patientgroupscontroller#index()","planscontroller#index()","qualityreviewscontroller#index()","questionscontroller#index()","recipescontroller#index()","reviewconflictscontroller#index()","rolescontroller#index()","roomscontroller#index()","subscriptionscontroller#index()","surveyscontroller#index()","timeslotscontroller#index()","welcomecontroller#index()","reviewconflict#ingredient_changes_hash()","qualityreview#ingredient_count()","recipe#ingredient_with_full_name()","recipestep#ingredients_full_names()","recipe#ingredients_not_tagged()","recipe#ingredients_tagged()","article#intolerances()","patientgroup::intolerances()","recipe#intolerances()","patientgroup::intolerances_with_other()","timeslot#is_last_vacant_time_slot?()","homecontroller#join()","dietitian#loss_calendar_slots()","dietitian#loss_time_slots()","recipe::made_for()","dietitian#main_avatar()","recipe#marketing_items_by_group()","ingredient#need_allergens?()","allergenscontroller#new()","allergensingredientscontroller#new()","appointmentscontroller#new()","articlescontroller#new()","availabilitiescontroller#new()","characteristicscontroller#new()","chargescontroller#new()","contentquotascontroller#new()","dietitians::registrationscontroller#new()","familiescontroller#new()","imagescontroller#new()","ingredientsrecipescontroller#new()","marketingitemscontroller#new()","memberplanscontroller#new()","patientgroupscontroller#new()","planscontroller#new()","qualityreviewscontroller#new()","questionscontroller#new()","recipestepscontroller#new()","recipescontroller#new()","reviewconflictscontroller#new()","rolescontroller#new()","subscriptionscontroller#new()","surveyscontroller#new()","timeslotscontroller#new()","appointmentscontroller#new_appointment_request_times()","family#no_first_name()","recipe#number_of_reviewers_hash()","dietitian#online?()","recipe#ordered_ingredients()","ingredient#other_allergens()","user#password_required?()","appointment#prep_complete?()","homecontroller#provider3126()","homecontroller#provider9172()","appointmentscontroller#purchase()","landingpagescontroller#qol()","reviewconflict#recipe_categories_changes_array()","recipescontroller#recipe_data()","recipe#recipe_ingredients_full_names()","qualityreview#recipe_name()","dashboardcontroller#recipe_status()","timeslot#related_time_slots()","timeslot#related_time_slots_count()","familiescontroller#remove_member()","recipescontroller#review_recipe()","recipe#review_tier()","patientgroup::safe_allergy_groups()","patientgroup::safe_disease_groups()","patientgroup::safe_intolerance_groups()","recipe::second_tier_not_resolved()","timeslot::select_appointment_time_slots()","reviewconflictscontroller#select_reviewer()","appointmentscontroller#select_time()","availabilitiescontroller#set_schedule()","allergenscontroller#show()","allergensingredientscontroller#show()","appointmentscontroller#show()","articlescontroller#show()","availabilitiescontroller#show()","characteristicscontroller#show()","contentquotascontroller#show()","familiescontroller#show()","imagescontroller#show()","ingredientsrecipescontroller#show()","memberplanscontroller#show()","patientgroupscontroller#show()","planscontroller#show()","questionscontroller#show()","recipecontroller#show()","recipestepscontroller#show()","recipescontroller#show()","rolescontroller#show()","subscriptionscontroller#show()","surveyscontroller#show()","timeslotscontroller#show()","dietitians::registrationscontroller#sign_up()","users::registrationscontroller#sign_up()","dietitians::registrationscontroller#sign_up_params()","users::registrationscontroller#sign_up_params()","user#sign_up_stage()","user#singular_possessive()","ingredientsrecipescontroller#sort()","recipestepscontroller#sort()","allergen#split_allergen_by_word()","ingredient#split_ingredient_by_word()","appointment#stage()","qualityreviewscontroller#start_review()","reviewconflictscontroller#start_review_conflict()","reviewconflict#step_changes_hash()","recipe#steps()","recipe#steps_by_group()","imageuploader#store_dir()","ingredient#suggested_allergens()","recipe#to_csv()","recipe::to_csv()","allergen::top_allergens()","user#unverified_health_groups()","allergenscontroller#update()","allergensingredientscontroller#update()","appointmentscontroller#update()","articlescontroller#update()","availabilitiescontroller#update()","characteristicscontroller#update()","contentquotascontroller#update()","dietitians::registrationscontroller#update()","familiescontroller#update()","imagescontroller#update()","ingredientscontroller#update()","ingredientsrecipescontroller#update()","marketingitemscontroller#update()","memberplanscontroller#update()","patientgroupscontroller#update()","planscontroller#update()","qualityreviewscontroller#update()","questionscontroller#update()","recipestepscontroller#update()","recipescontroller#update()","reviewconflictscontroller#update()","rolescontroller#update()","subscriptionscontroller#update()","surveyscontroller#update()","timeslotscontroller#update()","users::registrationscontroller#update()","ingredientscontroller#update_allergens()","rolescontroller#update_assignments()","dietitians::registrationscontroller#update_needs_confirmation?()","recipescontroller#update_patient_groups()","recipescontroller#update_recipe_categories()","dietitians::registrationscontroller#update_resource()","availabilitiescontroller#update_schedule()","appointment#update_with_payment()","user#uppercase_name()","user#weight()","user#weight_hash()",""],"info":[["AdminUser","","AdminUser.html","",""],["Allergen","","Allergen.html","",""],["AllergensController","","AllergensController.html","",""],["AllergensIngredient","","AllergensIngredient.html","",""],["AllergensIngredientsController","","AllergensIngredientsController.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["ApplicationPolicy","","ApplicationPolicy.html","",""],["Appointment","","Appointment.html","","<p>APPOINTMENT SCHEMA\n<p>t.integer  “patient_focus_id” t.integer  “appointment_host_id” …\n"],["AppointmentsController","","AppointmentsController.html","",""],["AppointmentsHelper","","AppointmentsHelper.html","",""],["Article","","Article.html","",""],["ArticlesController","","ArticlesController.html","",""],["ArticlesHelper","","ArticlesHelper.html","",""],["AvailabilitiesController","","AvailabilitiesController.html","",""],["AvailabilitiesHelper","","AvailabilitiesHelper.html","",""],["Availability","","Availability.html","",""],["Characteristic","","Characteristic.html","",""],["CharacteristicsController","","CharacteristicsController.html","",""],["CharacteristicsHelper","","CharacteristicsHelper.html","",""],["ChargesController","","ChargesController.html","",""],["ChargesHelper","","ChargesHelper.html","",""],["ContentQuota","","ContentQuota.html","",""],["ContentQuotaHelper","","ContentQuotaHelper.html","",""],["ContentQuotasController","","ContentQuotasController.html","",""],["DashboardController","","DashboardController.html","",""],["DeviseHelper","","DeviseHelper.html","",""],["Dietitian","","Dietitian.html","",""],["Dietitians","","Dietitians.html","",""],["Dietitians::RegistrationsController","","Dietitians/RegistrationsController.html","","<p>stackoverflow.com/questions/16379554/strong-parameters-with-rails-4-0-and-devise\n"],["FamiliesController","","FamiliesController.html","",""],["FamiliesHelper","","FamiliesHelper.html","",""],["Family","","Family.html","",""],["HomeController","","HomeController.html","",""],["HomeHelper","","HomeHelper.html","",""],["Image","","Image.html","",""],["ImageUploader","","ImageUploader.html","",""],["ImagesController","","ImagesController.html","",""],["ImagesHelper","","ImagesHelper.html","",""],["Ingredient","","Ingredient.html","",""],["IngredientsController","","IngredientsController.html","",""],["IngredientsHelper","","IngredientsHelper.html","",""],["IngredientsRecipe","","IngredientsRecipe.html","","<p>require &#39;unitwise&#39; require &#39;unitwise/ext&#39;\n"],["IngredientsRecipesController","","IngredientsRecipesController.html","",""],["IngredientsRecipesHelper","","IngredientsRecipesHelper.html","",""],["LandingPagesController","","LandingPagesController.html","",""],["LandingPagesHelper","","LandingPagesHelper.html","",""],["MarketingItem","","MarketingItem.html","",""],["MarketingItemsController","","MarketingItemsController.html","",""],["MemberPlan","","MemberPlan.html","",""],["MemberPlansController","","MemberPlansController.html","",""],["MemberPlansHelper","","MemberPlansHelper.html","",""],["Object","","Object.html","",""],["PatientGroup","","PatientGroup.html","",""],["PatientGroupsController","","PatientGroupsController.html","",""],["PatientGroupsHelper","","PatientGroupsHelper.html","",""],["Plan","","Plan.html","",""],["PlansController","","PlansController.html","",""],["PlansHelper","","PlansHelper.html","",""],["QualityReview","","QualityReview.html","",""],["QualityReviewPolicy","","QualityReviewPolicy.html","",""],["QualityReviewsController","","QualityReviewsController.html","",""],["QualityReviewsHelper","","QualityReviewsHelper.html","",""],["Question","","Question.html","",""],["QuestionsController","","QuestionsController.html","",""],["QuestionsHelper","","QuestionsHelper.html","",""],["Recipe","","Recipe.html","",""],["RecipeController","","RecipeController.html","",""],["RecipeHelper","","RecipeHelper.html","",""],["RecipePolicy","","RecipePolicy.html","",""],["RecipeStep","","RecipeStep.html","",""],["RecipeStepsController","","RecipeStepsController.html","",""],["RecipesController","","RecipesController.html","",""],["RecipesHelper","","RecipesHelper.html","",""],["ReviewConflict","","ReviewConflict.html","",""],["ReviewConflictsController","","ReviewConflictsController.html","",""],["Role","","Role.html","",""],["RolesController","","RolesController.html","",""],["RolesHelper","","RolesHelper.html","",""],["Room","","Room.html","",""],["RoomsController","","RoomsController.html","",""],["StepsHelper","","StepsHelper.html","",""],["Subscription","","Subscription.html","",""],["SubscriptionsController","","SubscriptionsController.html","",""],["SubscriptionsHelper","","SubscriptionsHelper.html","",""],["Survey","","Survey.html","",""],["SurveyHelper","","SurveyHelper.html","",""],["SurveysController","","SurveysController.html","",""],["TimeSlot","","TimeSlot.html","",""],["TimeSlotsController","","TimeSlotsController.html","",""],["TimeSlotsHelper","","TimeSlotsHelper.html","",""],["User","","User.html","",""],["UserFamily","","UserFamily.html","",""],["UserHelper","","UserHelper.html","",""],["UserRole","","UserRole.html","",""],["Users","","Users.html","",""],["Users::RegistrationsController","","Users/RegistrationsController.html","","<p>stackoverflow.com/questions/16379554/strong-parameters-with-rails-4-0-and-devise\n"],["WelcomeController","","WelcomeController.html","",""],["WelcomeHelper","","WelcomeHelper.html","",""],["accept_review_conflict","ReviewConflictsController","ReviewConflictsController.html#method-i-accept_review_conflict","()",""],["account_update_params","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-account_update_params","()",""],["add_marketing","ArticlesController","ArticlesController.html#method-i-add_marketing","()","<p>GET /articles/add_marketing\n"],["after_inactive_sign_up_path_for","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-after_inactive_sign_up_path_for","(resource)","<p>The path used after sign up for inactive accounts. You need to overwrite\nthis method in your own RegistrationsController …\n"],["after_sign_in_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_in_path_for","(resource)","<p>shared by the user and dietitian registrations controllers\n"],["after_sign_up_path_for","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-after_sign_up_path_for","(resource)","<p>The path used after sign up. You need to overwrite this method in your own\nRegistrationsController.\n"],["after_sign_up_path_for","Users::RegistrationsController","Users/RegistrationsController.html#method-i-after_sign_up_path_for","(resource)",""],["after_update_path_for","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-after_update_path_for","(resource)","<p>The default url to be used after updating a resource. You need to overwrite\nthis method in your own  …\n"],["after_update_path_for","Users::RegistrationsController","Users/RegistrationsController.html#method-i-after_update_path_for","(resource)","<p>def clean_params(params)\n<p>if params\n\n<pre>if params[&quot;user&quot;][&quot;height&quot;]\n  if (params[&quot;user&quot;][&quot;height&quot;][&quot;feet&quot;].to_i ...</pre>\n"],["age","User","User.html#method-i-age","()",""],["ages","Family","Family.html#method-i-ages","()",""],["all_first_names","Family","Family.html#method-i-all_first_names","()",""],["all_in_first_tier_review","Recipe","Recipe.html#method-c-all_in_first_tier_review","()",""],["all_in_second_tier_review","Recipe","Recipe.html#method-c-all_in_second_tier_review","()",""],["all_ingredient_display_names","IngredientsRecipe","IngredientsRecipe.html#method-c-all_ingredient_display_names","()","<p>def amount=(value)\n\n<pre>write_attribute :amount, value.to_tablespoon\nif value.respond_to?(:unit)\n  self.amount_unit ...</pre>\n"],["all_live_recipes","Recipe","Recipe.html#method-c-all_live_recipes","()",""],["all_need_first_tier_review","Recipe","Recipe.html#method-c-all_need_first_tier_review","()",""],["all_need_original_review","Recipe","Recipe.html#method-c-all_need_original_review","()",""],["all_need_second_tier_review","Recipe","Recipe.html#method-c-all_need_second_tier_review","()",""],["all_recipe_names","Recipe","Recipe.html#method-c-all_recipe_names","()","<p>return an array of all unique recipe titles\n"],["allergens","Recipe","Recipe.html#method-i-allergens","()","<p>return a recipe&#39;s allergens, used in recipes controller\nedit_recipe_group method to only show patient …\n"],["allergens_array","Ingredient","Ingredient.html#method-i-allergens_array","()",""],["allergens_changes_hash","ReviewConflict","ReviewConflict.html#method-i-allergens_changes_hash","(*suggestion)",""],["allergies","Article","Article.html#method-i-allergies","()","<p>return article&#39;s PAtient Groups with  category allergy\n"],["allergies","PatientGroup","PatientGroup.html#method-c-allergies","()","<p>returns all Patient Groups with the category allergy\n"],["allergies","Recipe","Recipe.html#method-i-allergies","()","<p>return a recipe&#39;s PAtient Groups with the category allergy\n"],["allergies_with_other","PatientGroup","PatientGroup.html#method-c-allergies_with_other","()","<p>returns all Patient Groups with the category allergy and a Patient Group\nnamed “Other Allergy” …\n"],["appointment_prep","AppointmentsController","AppointmentsController.html#method-i-appointment_prep","()","<p>GET /appointments/1/appointment_prep currently called from dietitian prep\n(with modal)  dietitian insession …\n"],["appointment_review","AppointmentsController","AppointmentsController.html#method-i-appointment_review","()","<p>GET /appointments/1/appointment_review\n"],["as_json","TimeSlot","TimeSlot.html#method-i-as_json","(options = {})","<p>json response\n"],["assign_content","ContentQuotasController","ContentQuotasController.html#method-i-assign_content","()","<p>PATCH /assign_content PATCH /assign_content.json\n"],["assign_reviewer","ReviewConflictsController","ReviewConflictsController.html#method-i-assign_reviewer","()",""],["assigned_to_dietitian","ReviewConflict","ReviewConflict.html#method-c-assigned_to_dietitian","(dietitian_id)",""],["assignments","RolesController","RolesController.html#method-i-assignments","()","<p>GET /roles/assignments\n"],["authenticate_scope!","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-authenticate_scope-21","()","<p>Authenticates the current scope and gets the current resource from the\nsession.\n"],["autosave_associated_records_for_ingredient","IngredientsRecipe","IngredientsRecipe.html#method-i-autosave_associated_records_for_ingredient","()","<p>over ride rails validate_associated_record_for_ingredient to blank since\nfind_or_create_ingredient(name) …\n"],["available_dietitians","Appointment","Appointment.html#method-i-available_dietitians","()",""],["available_time_slots","Appointment","Appointment.html#method-i-available_time_slots","()",""],["between","TimeSlot","TimeSlot.html#method-c-between","(start_time, end_time)","<p>check if time slot is between two times\n"],["build_resource","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-build_resource","(hash=nil)","<p>Build a devise resource passing in the session. Useful to move temporary\nsession data to the newly created …\n"],["cancel","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-cancel","()","<p>GET /resource/cancel Forces the session data which is usually expired after\nsign in to be expired now. …\n"],["cancel_related_time_slots","Availability","Availability.html#method-i-cancel_related_time_slots","()",""],["cancel_related_time_slots","TimeSlot","TimeSlot.html#method-c-cancel_related_time_slots","(time_slot)",""],["clear_uploader","ImageUploader","ImageUploader.html#method-i-clear_uploader","()",""],["common_allergens","Allergen","Allergen.html#method-c-common_allergens","()",""],["complete_appt_prep_survey","AppointmentsController","AppointmentsController.html#method-i-complete_appt_prep_survey","()",""],["complete_recipe","RecipesController","RecipesController.html#method-i-complete_recipe","()",""],["complete_review","QualityReviewsController","QualityReviewsController.html#method-i-complete_review","()",""],["completed_quality_reviews","Dietitian","Dietitian.html#method-i-completed_quality_reviews","()",""],["configure_permitted_parameters","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-configure_permitted_parameters","()",""],["configure_permitted_parameters","Users::RegistrationsController","Users/RegistrationsController.html#method-i-configure_permitted_parameters","()","<p>my custom fields are :name, :heard_how\n"],["conflicts_cleared?","QualityReview","QualityReview.html#method-i-conflicts_cleared-3F","()",""],["create","AllergensController","AllergensController.html#method-i-create","()","<p>POST /allergens POST /allergens.json\n"],["create","AllergensIngredientsController","AllergensIngredientsController.html#method-i-create","()","<p>POST /allergens_ingredients POST /allergens_ingredients.json\n"],["create","AppointmentsController","AppointmentsController.html#method-i-create","()","<p>POST /appointments POST /appointments.json\n"],["create","ArticlesController","ArticlesController.html#method-i-create","()","<p>POST /articles POST /articles.json\n"],["create","AvailabilitiesController","AvailabilitiesController.html#method-i-create","()","<p>POST /availabilities POST /availabilities.json\n"],["create","CharacteristicsController","CharacteristicsController.html#method-i-create","()","<p>POST /characteristics POST /characteristics.json\n"],["create","ChargesController","ChargesController.html#method-i-create","()",""],["create","ContentQuotasController","ContentQuotasController.html#method-i-create","()","<p>POST /content_quota POST /content_quota.json\n"],["create","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-create","()","<p>POST /resource\n"],["create","FamiliesController","FamiliesController.html#method-i-create","()","<p>POST /families POST /families.json\n"],["create","ImagesController","ImagesController.html#method-i-create","()","<p>POST /images POST /images.json\n"],["create","IngredientsRecipesController","IngredientsRecipesController.html#method-i-create","()","<p>POST /ingredients_recipes POST /ingredients_recipes.json\n"],["create","MarketingItemsController","MarketingItemsController.html#method-i-create","()",""],["create","MemberPlansController","MemberPlansController.html#method-i-create","()","<p>POST /member_plans POST /member_plans.json\n"],["create","PatientGroupsController","PatientGroupsController.html#method-i-create","()","<p>POST /patient_groups POST /patient_groups.json\n"],["create","PlansController","PlansController.html#method-i-create","()","<p>POST /plans POST /plans.json\n"],["create","QualityReviewsController","QualityReviewsController.html#method-i-create","()",""],["create","QuestionsController","QuestionsController.html#method-i-create","()","<p>POST /questions POST /questions.json\n"],["create","RecipeStepsController","RecipeStepsController.html#method-i-create","()","<p>POST /recipe_steps POST /recipe_steps.json\n"],["create","RecipesController","RecipesController.html#method-i-create","()","<p>POST /recipes POST /recipes.json\n"],["create","ReviewConflictsController","ReviewConflictsController.html#method-i-create","()",""],["create","RolesController","RolesController.html#method-i-create","()","<p>POST /roles POST /roles.json\n"],["create","RoomsController","RoomsController.html#method-i-create","()",""],["create","SubscriptionsController","SubscriptionsController.html#method-i-create","()","<p>POST /subscriptions POST /subscriptions.json\n"],["create","SurveysController","SurveysController.html#method-i-create","()",""],["create","TimeSlotsController","TimeSlotsController.html#method-i-create","()","<p>POST /time_slots POST /time_slots.json\n"],["create_appointment_request_times","AppointmentsController","AppointmentsController.html#method-i-create_appointment_request_times","()","<p>POST /appointments/new_appointment_request_times\n"],["create_from_availabilities","TimeSlot","TimeSlot.html#method-c-create_from_availabilities","(array_of_availability_objects)","<p>returns a hash of the new time slots created based on the availabilities\nthat were sent to it returns …\n"],["create_from_availability","TimeSlot","TimeSlot.html#method-c-create_from_availability","(availability_object)",""],["create_from_availability","TimeSlotsController","TimeSlotsController.html#method-i-create_from_availability","()","<p>get /time_slots/create_from_availability\n"],["create_from_existing","TimeSlotsController","TimeSlotsController.html#method-i-create_from_existing","()","<p>get /time_slots/:id/create_from_existing\n"],["crop","ImageUploader","ImageUploader.html#method-i-crop","()",""],["crop","ImagesController","ImagesController.html#method-i-crop","()","<p>GET /dietitians/1/images/2/crop\n"],["data_by_dietitian","Recipe","Recipe.html#method-c-data_by_dietitian","()",""],["data_by_health_group","Recipe","Recipe.html#method-c-data_by_health_group","()","<p>recipe counts byt health group\n"],["data_by_total","Recipe","Recipe.html#method-c-data_by_total","()",""],["decline_review_conflict","ReviewConflictsController","ReviewConflictsController.html#method-i-decline_review_conflict","()",""],["destroy","AllergensIngredientsController","AllergensIngredientsController.html#method-i-destroy","()","<p>DELETE /allergens_ingredients/1 DELETE /allergens_ingredients/1.json\n"],["destroy","AppointmentsController","AppointmentsController.html#method-i-destroy","()","<p>DELETE /appointments/1 DELETE /appointments/1.json\n"],["destroy","ArticlesController","ArticlesController.html#method-i-destroy","()","<p>DELETE /articles/1 DELETE /articles/1.json\n"],["destroy","AvailabilitiesController","AvailabilitiesController.html#method-i-destroy","()","<p>DELETE /availabilities/1 DELETE /availabilities/1.json\n"],["destroy","ContentQuotasController","ContentQuotasController.html#method-i-destroy","()","<p>DELETE /content_quota/1 DELETE /content_quota/1.json\n"],["destroy","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-destroy","()","<p>DELETE /resource\n"],["destroy","FamiliesController","FamiliesController.html#method-i-destroy","()","<p>DELETE /families/1 DELETE /families/1.json\n"],["destroy","IngredientsRecipesController","IngredientsRecipesController.html#method-i-destroy","()","<p>DELETE /ingredients_recipes/1 DELETE /ingredients_recipes/1.json\n"],["destroy","MemberPlansController","MemberPlansController.html#method-i-destroy","()","<p>DELETE /member_plans/1 DELETE /member_plans/1.json\n"],["destroy","PatientGroupsController","PatientGroupsController.html#method-i-destroy","()","<p>DELETE /patient_groups/1 DELETE /patient_groups/1.json\n"],["destroy","PlansController","PlansController.html#method-i-destroy","()","<p>DELETE /plans/1 DELETE /plans/1.json\n"],["destroy","QuestionsController","QuestionsController.html#method-i-destroy","()","<p>DELETE /questions/1 DELETE /questions/1.json\n"],["destroy","RecipeStepsController","RecipeStepsController.html#method-i-destroy","()","<p>DELETE /recipe_steps/1 DELETE /recipe_steps/1.json\n"],["destroy","RecipesController","RecipesController.html#method-i-destroy","()","<p>DELETE /recipes/1 DELETE /recipes/1.json\n"],["destroy","RolesController","RolesController.html#method-i-destroy","()","<p>DELETE /roles/1 DELETE /roles/1.json\n"],["destroy","SubscriptionsController","SubscriptionsController.html#method-i-destroy","()","<p>DELETE /subscriptions/1 DELETE /subscriptions/1.json\n"],["destroy","TimeSlotsController","TimeSlotsController.html#method-i-destroy","()","<p>DELETE /time_slots/1 DELETE /time_slots/1.json\n"],["devise_error_messages!","DeviseHelper","DeviseHelper.html#method-i-devise_error_messages-21","()",""],["dietitian_recipes_index","RecipesController","RecipesController.html#method-i-dietitian_recipes_index","()","<p>notes this method and view is being used as the dietitian dashboard right\nnow, it should be moved to …\n"],["discount_landing_page","HomeController","HomeController.html#method-i-discount_landing_page","()",""],["diseases","Article","Article.html#method-i-diseases","()","<p>return article&#39;s Patient Groups with the category disease\n"],["diseases","PatientGroup","PatientGroup.html#method-c-diseases","()","<p>returns all Patient Groups with the category intolerance except other field\n"],["diseases","Recipe","Recipe.html#method-i-diseases","()","<p>return a recipe&#39;s Patient Groups with the category disease\n"],["diseases_with_other","PatientGroup","PatientGroup.html#method-c-diseases_with_other","()","<p>returns array of all Patient Groups with the category disease and an\nPatient Group named “Other …\n"],["do_somthing!","CharacteristicsHelper","CharacteristicsHelper.html#method-i-do_somthing-21","()",""],["do_somthing!","StepsHelper","StepsHelper.html#method-i-do_somthing-21","()",""],["edit","AllergensController","AllergensController.html#method-i-edit","()","<p>GET /allergens/1/edit\n"],["edit","AllergensIngredientsController","AllergensIngredientsController.html#method-i-edit","()","<p>GET /allergens_ingredients/1/edit\n"],["edit","AppointmentsController","AppointmentsController.html#method-i-edit","()","<p>GET /appointments/1/edit\n"],["edit","ArticlesController","ArticlesController.html#method-i-edit","()","<p>GET /articles/1/edit\n"],["edit","AvailabilitiesController","AvailabilitiesController.html#method-i-edit","()","<p>GET /availabilities/1/edit\n"],["edit","CharacteristicsController","CharacteristicsController.html#method-i-edit","()","<p>GET /characteristics/1/edit\n"],["edit","ContentQuotasController","ContentQuotasController.html#method-i-edit","()","<p>GET /content_quota/1/edit\n"],["edit","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-edit","()","<p>GET /resource/edit\n"],["edit","FamiliesController","FamiliesController.html#method-i-edit","()","<p>GET /families/1/edit\n"],["edit","ImagesController","ImagesController.html#method-i-edit","()","<p>GET /images/1/edit\n"],["edit","IngredientsController","IngredientsController.html#method-i-edit","()","<p>GET /ingredients/1/edit\n"],["edit","IngredientsRecipesController","IngredientsRecipesController.html#method-i-edit","()","<p>GET /ingredients_recipes/1/edit\n"],["edit","MarketingItemsController","MarketingItemsController.html#method-i-edit","()",""],["edit","MemberPlansController","MemberPlansController.html#method-i-edit","()","<p>GET /member_plans/1/edit\n"],["edit","PatientGroupsController","PatientGroupsController.html#method-i-edit","()","<p>GET /patient_groups/1/edit\n"],["edit","PlansController","PlansController.html#method-i-edit","()","<p>GET /plans/1/edit\n"],["edit","QualityReviewsController","QualityReviewsController.html#method-i-edit","()",""],["edit","QuestionsController","QuestionsController.html#method-i-edit","()","<p>GET /questions/1/edit\n"],["edit","RecipeStepsController","RecipeStepsController.html#method-i-edit","()","<p>GET /recipe_steps/1/edit\n"],["edit","RecipesController","RecipesController.html#method-i-edit","()","<p>GET /recipes/1/edit\n"],["edit","ReviewConflictsController","ReviewConflictsController.html#method-i-edit","()",""],["edit","RolesController","RolesController.html#method-i-edit","()","<p>GET /roles/1/edit\n"],["edit","SubscriptionsController","SubscriptionsController.html#method-i-edit","()","<p>GET /subscriptions/1/edit\n"],["edit","SurveysController","SurveysController.html#method-i-edit","()",""],["edit","TimeSlotsController","TimeSlotsController.html#method-i-edit","()","<p>GET /time_slots/1/edit\n"],["edit_allergens","IngredientsController","IngredientsController.html#method-i-edit_allergens","()","\n<pre class=\"ruby\"><span class=\"ruby-identifier\">respond_to</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">format</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-keyword\">if</span> <span class=\"ruby-ivar\">@ingredient</span>.<span class=\"ruby-identifier\">save</span>\n    <span class=\"ruby-identifier\">format</span>.<span class=\"ruby-identifier\">html</span> { <span class=\"ruby-identifier\">redirect_to</span> <span class=\"ruby-ivar\">@ingredient</span>, <span class=\"ruby-identifier\">notice</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-string\">&#39;Ingredient ...\n</span></pre>\n"],["edit_assignments","RolesController","RolesController.html#method-i-edit_assignments","()","<p>GET /roles/assignments/edit/:id :id = dietitian_id\n"],["edit_patient_groups","RecipesController","RecipesController.html#method-i-edit_patient_groups","()",""],["edit_recipe_categories","RecipesController","RecipesController.html#method-i-edit_recipe_categories","()",""],["edit_recipe_group","RecipesController","RecipesController.html#method-i-edit_recipe_group","()",""],["edit_review_conflict","ReviewConflictsController","ReviewConflictsController.html#method-i-edit_review_conflict","()",""],["email_required?","User","User.html#method-i-email_required-3F","()",""],["end_appointment","AppointmentsController","AppointmentsController.html#method-i-end_appointment","()","<p>GET /appointments/1/end_appointment\n"],["extension_white_list","ImageUploader","ImageUploader.html#method-i-extension_white_list","()","<p>Add a white list of extensions which are allowed to be uploaded. For images\nyou might use something like …\n"],["family_member_count","Family","Family.html#method-i-family_member_count","()",""],["fetch_categories_array","Recipe","Recipe.html#method-i-fetch_categories_array","()",""],["fetch_health_groups_array","Recipe","Recipe.html#method-i-fetch_health_groups_array","()","<p>returns recipe&#39;s health groups as an array of strings\n"],["fetch_ingredients_allergens_hash","Recipe","Recipe.html#method-i-fetch_ingredients_allergens_hash","()",""],["fetch_possible_review_conflicts","Recipe","Recipe.html#method-i-fetch_possible_review_conflicts","(quality_review)",""],["find_or_create_allergen","Allergen","Allergen.html#method-c-find_or_create_allergen","(name)",""],["find_or_create_ingredient","IngredientsRecipe","IngredientsRecipe.html#method-i-find_or_create_ingredient","(name)","<p>find or create ingredient by name\n"],["first_tier_not_resolved","Recipe","Recipe.html#method-c-first_tier_not_resolved","()",""],["format_date","TimeSlot","TimeSlot.html#method-c-format_date","(date_time)","<p>format date for database\n"],["full_name","IngredientsRecipe","IngredientsRecipe.html#method-i-full_name","()","<p>return the full name of the ingredient including amount, unit and display\nname\n"],["full_step","RecipeStep","RecipeStep.html#method-i-full_step","()","<p>return a string of the entire\n"],["generate_for_appointment","Survey","Survey.html#method-c-generate_for_appointment","(appointment, client_or_dietitian)",""],["generate_for_follow_up","Survey","Survey.html#method-c-generate_for_follow_up","(appointment)",""],["generate_for_post_appointment","Survey","Survey.html#method-c-generate_for_post_appointment","(appointment, client_or_dietitian)",""],["generate_for_user","Survey","Survey.html#method-c-generate_for_user","(client, survey_user, survey_type)",""],["get_family!","FamiliesHelper","FamiliesHelper.html#method-i-get_family-21","()",""],["get_incomplete_quality_reviews!","QualityReviewsHelper","QualityReviewsHelper.html#method-i-get_incomplete_quality_reviews-21","()",""],["get_ingredients!","IngredientsHelper","IngredientsHelper.html#method-i-get_ingredients-21","()",""],["get_patient_groups!","PatientGroupsHelper","PatientGroupsHelper.html#method-i-get_patient_groups-21","()",""],["get_previous_appointments!","AppointmentsHelper","AppointmentsHelper.html#method-i-get_previous_appointments-21","()",""],["get_recipe!","RecipesHelper","RecipesHelper.html#method-i-get_recipe-21","()",""],["get_recipe_characteristics!","CharacteristicsHelper","CharacteristicsHelper.html#method-i-get_recipe_characteristics-21","()",""],["get_recipe_list!","RecipesHelper","RecipesHelper.html#method-i-get_recipe_list-21","(type)",""],["get_recipe_list_by_groups!","RecipesHelper","RecipesHelper.html#method-i-get_recipe_list_by_groups-21","(*groups)",""],["get_recipe_list_from_group_by_meal!","RecipesHelper","RecipesHelper.html#method-i-get_recipe_list_from_group_by_meal-21","(recipes, meal)",""],["get_recipe_steps!","StepsHelper","StepsHelper.html#method-i-get_recipe_steps-21","()",""],["get_started","WelcomeController","WelcomeController.html#method-i-get_started","()",""],["get_units!","IngredientsRecipesHelper","IngredientsRecipesHelper.html#method-i-get_units-21","()","<p>def get_ingredient_prep_options!\n\n<pre>@prep_options = [&quot;chopped&quot;, &quot;steamed&quot;, &quot;minced&quot;, &quot;julianed&quot;, &quot;quartered&quot;, ...</pre>\n"],["get_upcoming_appointment!","AppointmentsHelper","AppointmentsHelper.html#method-i-get_upcoming_appointment-21","()",""],["get_upcoming_appointments!","AppointmentsHelper","AppointmentsHelper.html#method-i-get_upcoming_appointments-21","()",""],["get_user_allergens!","UserHelper","UserHelper.html#method-i-get_user_allergens-21","()",""],["get_user_ingredients!","UserHelper","UserHelper.html#method-i-get_user_ingredients-21","()","<p>returns user bad ingredients\n"],["get_user_patient_groups!","UserHelper","UserHelper.html#method-i-get_user_patient_groups-21","()",""],["half_hour_time_slots_available","Dietitian","Dietitian.html#method-i-half_hour_time_slots_available","()","<p>13, 17 &mdash; // 13 vacant out of 17 time slots\n\n"],["health_group_array","QualityReview","QualityReview.html#method-i-health_group_array","()",""],["health_groups","Family","Family.html#method-i-health_groups","()",""],["health_groups_changes_array","ReviewConflict","ReviewConflict.html#method-i-health_groups_changes_array","(*suggestion)",""],["height","User","User.html#method-i-height","()",""],["height_hash","User","User.html#method-i-height_hash","()","<p>returns height_hash = {&#39;feet&#39;=&gt; ##, &#39;inches&#39; =&gt; ##}\n"],["home","DashboardController","DashboardController.html#method-i-home","()",""],["home","WelcomeController","WelcomeController.html#method-i-home","()","<p>user home page / main dashboard\n"],["home_page","HomeController","HomeController.html#method-i-home_page","()",""],["in_review_by_risk_level","ReviewConflict","ReviewConflict.html#method-c-in_review_by_risk_level","()","\n<pre>return conflicts_by_risk_level</pre>\n<p>end\n"],["in_session","RoomsController","RoomsController.html#method-i-in_session","()",""],["incomplete_quality_reviews","Dietitian","Dietitian.html#method-i-incomplete_quality_reviews","()",""],["incomplete_recipes","Dietitian","Dietitian.html#method-i-incomplete_recipes","()",""],["index","AllergensController","AllergensController.html#method-i-index","()","<p>GET /allergens GET /allergens.json\n"],["index","AllergensIngredientsController","AllergensIngredientsController.html#method-i-index","()","<p>GET /allergens_ingredients GET /allergens_ingredients.json\n"],["index","AppointmentsController","AppointmentsController.html#method-i-index","()","<p>GET /appointments GET /appointments.json\n"],["index","ArticlesController","ArticlesController.html#method-i-index","()","<p>GET /articles GET /articles.json\n"],["index","AvailabilitiesController","AvailabilitiesController.html#method-i-index","()","<p>GET /availabilities GET /availabilities.json\n"],["index","CharacteristicsController","CharacteristicsController.html#method-i-index","()","<p>GET /characteristics GET /characteristics.json\n"],["index","ContentQuotasController","ContentQuotasController.html#method-i-index","()","<p>GET /content_quota GET /content_quota.json\n"],["index","DashboardController","DashboardController.html#method-i-index","()","<p>GET /admin_dashboard\n"],["index","FamiliesController","FamiliesController.html#method-i-index","()","<p>GET /families GET /families.json\n"],["index","HomeController","HomeController.html#method-i-index","()","<p>before_filter :check_user_logged_in! include UserHelper include\nFamiliesHelper include RecipesHelper …\n"],["index","ImagesController","ImagesController.html#method-i-index","()","<p>GET /images GET /images.json\n"],["index","IngredientsController","IngredientsController.html#method-i-index","()","<p>GET /ingredients GET /ingredients.json\n"],["index","LandingPagesController","LandingPagesController.html#method-i-index","()","<p>home page\n"],["index","MarketingItemsController","MarketingItemsController.html#method-i-index","()","<p>POST articles/:id/marketing_items\n"],["index","MemberPlansController","MemberPlansController.html#method-i-index","()","<p>GET /member_plans GET /member_plans.json\n"],["index","PatientGroupsController","PatientGroupsController.html#method-i-index","()","<p>GET /patient_groups GET /patient_groups.json\n"],["index","PlansController","PlansController.html#method-i-index","()","<p>GET /plans GET /plans.json\n"],["index","QualityReviewsController","QualityReviewsController.html#method-i-index","()","<p>POST articles/:id/quality_reviews\n"],["index","QuestionsController","QuestionsController.html#method-i-index","()","<p>GET /questions GET /questions.json\n"],["index","RecipesController","RecipesController.html#method-i-index","()","<p>GET /recipes GET /recipes.json\n"],["index","ReviewConflictsController","ReviewConflictsController.html#method-i-index","()","<p>POST articles/:id/review_conflicts\n"],["index","RolesController","RolesController.html#method-i-index","()","<p>GET /roles GET /roles.json\n"],["index","RoomsController","RoomsController.html#method-i-index","()",""],["index","SubscriptionsController","SubscriptionsController.html#method-i-index","()","<p>GET /subscriptions GET /subscriptions.json\n"],["index","SurveysController","SurveysController.html#method-i-index","()",""],["index","TimeSlotsController","TimeSlotsController.html#method-i-index","()","<p>GET /time_slots .json is created specifically for calendar usage right now\nneed to change it to show …\n"],["index","WelcomeController","WelcomeController.html#method-i-index","()","<p>this is currently the dietitian&#39;s dashboard\n"],["ingredient_changes_hash","ReviewConflict","ReviewConflict.html#method-i-ingredient_changes_hash","(*suggestion)",""],["ingredient_count","QualityReview","QualityReview.html#method-i-ingredient_count","()",""],["ingredient_with_full_name","Recipe","Recipe.html#method-i-ingredient_with_full_name","(full_name)",""],["ingredients_full_names","RecipeStep","RecipeStep.html#method-i-ingredients_full_names","()",""],["ingredients_not_tagged","Recipe","Recipe.html#method-i-ingredients_not_tagged","()","<p>return a recipe&#39;s ingredients that have not yet been tagged with\nallergens\n"],["ingredients_tagged","Recipe","Recipe.html#method-i-ingredients_tagged","()","<p>return a recipe&#39;s ingredients that have already been tagged with\nallergens\n"],["intolerances","Article","Article.html#method-i-intolerances","()","<p>return a article&#39;s Patient Groups with the category intolerance\n"],["intolerances","PatientGroup","PatientGroup.html#method-c-intolerances","()","<p>returns all Patient Groups with the category intolerance\n"],["intolerances","Recipe","Recipe.html#method-i-intolerances","()","<p>return a recipe&#39;s Patient Groups with the category intolerance\n"],["intolerances_with_other","PatientGroup","PatientGroup.html#method-c-intolerances_with_other","()","<p>returns all Patient Groups with the category intolerance and a Patient\nGroup named “Other Intolerance” …\n"],["is_last_vacant_time_slot?","TimeSlot","TimeSlot.html#method-i-is_last_vacant_time_slot-3F","()",""],["join","HomeController","HomeController.html#method-i-join","()",""],["loss_calendar_slots","Dietitian","Dietitian.html#method-i-loss_calendar_slots","(appointment)","<p>if a dietitian accepts an appointment, how many time slots are lost that\nare the last on the calendar …\n"],["loss_time_slots","Dietitian","Dietitian.html#method-i-loss_time_slots","(appointment)","<p>if a dietitian accepts an appointment, how many time slots are lost\n"],["made_for","Recipe","Recipe.html#method-c-made_for","(*patient_groups)","<p>return recipes that are made for patient groups entered as an array of\nstrings\n"],["main_avatar","Dietitian","Dietitian.html#method-i-main_avatar","()",""],["marketing_items_by_group","Recipe","Recipe.html#method-i-marketing_items_by_group","()","<p>return hash of recipe marketing items by patient group and by title ad\ndescription\n"],["need_allergens?","Ingredient","Ingredient.html#method-i-need_allergens-3F","()","<p>method to check if an ingredient has had allergens added\n"],["new","AllergensController","AllergensController.html#method-i-new","()","<p>GET /allergens/new\n"],["new","AllergensIngredientsController","AllergensIngredientsController.html#method-i-new","()","<p>GET /allergens_ingredients/new\n"],["new","AppointmentsController","AppointmentsController.html#method-i-new","()","<p>GET /appointments/new\n"],["new","ArticlesController","ArticlesController.html#method-i-new","()","<p>GET /articles/new\n"],["new","AvailabilitiesController","AvailabilitiesController.html#method-i-new","()","<p>GET /availabilities/new\n"],["new","CharacteristicsController","CharacteristicsController.html#method-i-new","()","<p>GET /characteristics/new\n"],["new","ChargesController","ChargesController.html#method-i-new","()",""],["new","ContentQuotasController","ContentQuotasController.html#method-i-new","()","<p>GET /content_quota/new\n"],["new","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-new","()","<p>GET /resource/sign_up\n"],["new","FamiliesController","FamiliesController.html#method-i-new","()","<p>GET /families/new\n"],["new","ImagesController","ImagesController.html#method-i-new","()","<p>GET /images/new\n"],["new","IngredientsRecipesController","IngredientsRecipesController.html#method-i-new","()","<p>GET /ingredients_recipes/new\n"],["new","MarketingItemsController","MarketingItemsController.html#method-i-new","()",""],["new","MemberPlansController","MemberPlansController.html#method-i-new","()","<p>GET /member_plans/new\n"],["new","PatientGroupsController","PatientGroupsController.html#method-i-new","()","<p>GET /patient_groups/new\n"],["new","PlansController","PlansController.html#method-i-new","()","<p>GET /plans/new\n"],["new","QualityReviewsController","QualityReviewsController.html#method-i-new","()",""],["new","QuestionsController","QuestionsController.html#method-i-new","()","<p>GET /questions/new\n"],["new","RecipeStepsController","RecipeStepsController.html#method-i-new","()","<p>GET /recipe_steps/new\n"],["new","RecipesController","RecipesController.html#method-i-new","()","<p>GET /recipes/new\n"],["new","ReviewConflictsController","ReviewConflictsController.html#method-i-new","()",""],["new","RolesController","RolesController.html#method-i-new","()","<p>GET /roles/new\n"],["new","SubscriptionsController","SubscriptionsController.html#method-i-new","()","<p>GET /subscriptions/new\n"],["new","SurveysController","SurveysController.html#method-i-new","()",""],["new","TimeSlotsController","TimeSlotsController.html#method-i-new","()","<p>GET /time_slots/new\n"],["new_appointment_request_times","AppointmentsController","AppointmentsController.html#method-i-new_appointment_request_times","()","<p>GET /appointments/new_appointment_request_times\n"],["no_first_name","Family","Family.html#method-i-no_first_name","(attributes)","<p>family can not create a user without a first name, see\naccepted_nested_attributes_for reject_if:\n"],["number_of_reviewers_hash","Recipe","Recipe.html#method-i-number_of_reviewers_hash","()",""],["online?","Dietitian","Dietitian.html#method-i-online-3F","()",""],["ordered_ingredients","Recipe","Recipe.html#method-i-ordered_ingredients","()","<p>returns recipe ingredients in order\n"],["other_allergens","Ingredient","Ingredient.html#method-i-other_allergens","()","<p>returns ingredient allergens that are not in the top 10 or self\n"],["password_required?","User","User.html#method-i-password_required-3F","()","<p>Checks whether a password is needed or not. For validations only. Passwords\nare always required if it&#39;s …\n"],["prep_complete?","Appointment","Appointment.html#method-i-prep_complete-3F","()",""],["provider3126","HomeController","HomeController.html#method-i-provider3126","()",""],["provider9172","HomeController","HomeController.html#method-i-provider9172","()",""],["purchase","AppointmentsController","AppointmentsController.html#method-i-purchase","()",""],["qol","LandingPagesController","LandingPagesController.html#method-i-qol","()",""],["recipe_categories_changes_array","ReviewConflict","ReviewConflict.html#method-i-recipe_categories_changes_array","(*suggestion)",""],["recipe_data","RecipesController","RecipesController.html#method-i-recipe_data","()",""],["recipe_ingredients_full_names","Recipe","Recipe.html#method-i-recipe_ingredients_full_names","()",""],["recipe_name","QualityReview","QualityReview.html#method-i-recipe_name","()",""],["recipe_status","DashboardController","DashboardController.html#method-i-recipe_status","()","<p>GET /recipe_status\n"],["related_time_slots","TimeSlot","TimeSlot.html#method-i-related_time_slots","()",""],["related_time_slots_count","TimeSlot","TimeSlot.html#method-i-related_time_slots_count","()",""],["remove_member","FamiliesController","FamiliesController.html#method-i-remove_member","()","<p>DELETE /families/:id/remove_member/:member_id\n"],["review_recipe","RecipesController","RecipesController.html#method-i-review_recipe","()","<p>GET /recipes/:id/review_recipe GET /recipes/:id/review_recipe.json\n"],["review_tier","Recipe","Recipe.html#method-i-review_tier","()",""],["safe_allergy_groups","PatientGroup","PatientGroup.html#method-c-safe_allergy_groups","(array_of_recipes_allergens)","<p>Returns an array of Patient Groups with the category “allergy” that are\nsafe for the input …\n"],["safe_disease_groups","PatientGroup","PatientGroup.html#method-c-safe_disease_groups","(array_of_recipes_allergens)","<p>Returns an array of Patient Groups with the category “disease” that are\nsafe for the input …\n"],["safe_intolerance_groups","PatientGroup","PatientGroup.html#method-c-safe_intolerance_groups","(array_of_recipes_allergens)","<p>Returns an array of Patient Groups with the category “intolerances” that\nare safe for the input …\n"],["second_tier_not_resolved","Recipe","Recipe.html#method-c-second_tier_not_resolved","()",""],["select_appointment_time_slots","TimeSlot","TimeSlot.html#method-c-select_appointment_time_slots","()",""],["select_reviewer","ReviewConflictsController","ReviewConflictsController.html#method-i-select_reviewer","()",""],["select_time","AppointmentsController","AppointmentsController.html#method-i-select_time","()",""],["set_schedule","AvailabilitiesController","AvailabilitiesController.html#method-i-set_schedule","()","<p>POST /availabilities/set_schedule POST /availabilities/set_schedule.json\n"],["show","AllergensController","AllergensController.html#method-i-show","()","<p>GET /allergens/1 GET /allergens/1.json\n"],["show","AllergensIngredientsController","AllergensIngredientsController.html#method-i-show","()","<p>GET /allergens_ingredients/1 GET /allergens_ingredients/1.json\n"],["show","AppointmentsController","AppointmentsController.html#method-i-show","()","<p>this is where the index modal is coming from to view the prep information\nbefore the admin assigns a …\n"],["show","ArticlesController","ArticlesController.html#method-i-show","()","<p>GET /articles/1 GET /articles/1.json\n"],["show","AvailabilitiesController","AvailabilitiesController.html#method-i-show","()","<p>GET /availabilities/1 GET /availabilities/1.json\n"],["show","CharacteristicsController","CharacteristicsController.html#method-i-show","()","<p>GET /characteristics/1 GET /characteristics/1.json\n"],["show","ContentQuotasController","ContentQuotasController.html#method-i-show","()","<p>GET /content_quota/1 GET /content_quota/1.json\n"],["show","FamiliesController","FamiliesController.html#method-i-show","()","<p>GET /families/1 GET /families/1.json\n"],["show","ImagesController","ImagesController.html#method-i-show","()","<p>GET /images/1 GET /images/1.json\n"],["show","IngredientsRecipesController","IngredientsRecipesController.html#method-i-show","()","<p>GET /ingredients_recipes/1 GET /ingredients_recipes/1.json\n"],["show","MemberPlansController","MemberPlansController.html#method-i-show","()","<p>GET /member_plans/1 GET /member_plans/1.json\n"],["show","PatientGroupsController","PatientGroupsController.html#method-i-show","()","<p>GET /patient_groups/1 GET /patient_groups/1.json\n"],["show","PlansController","PlansController.html#method-i-show","()","<p>GET /plans/1 GET /plans/1.json\n"],["show","QuestionsController","QuestionsController.html#method-i-show","()","<p>GET /questions/1 GET /questions/1.json\n"],["show","RecipeController","RecipeController.html#method-i-show","()",""],["show","RecipeStepsController","RecipeStepsController.html#method-i-show","()","<p>GET /recipe_steps/1 GET /recipe_steps/1.json\n"],["show","RecipesController","RecipesController.html#method-i-show","()","\n<pre>gon.rabl as: &#39;recipe&#39;</pre>\n<p>end\n"],["show","RolesController","RolesController.html#method-i-show","()","<p>GET /roles/1 GET /roles/1.json\n"],["show","SubscriptionsController","SubscriptionsController.html#method-i-show","()","<p>GET /subscriptions/1 GET /subscriptions/1.json\n"],["show","SurveysController","SurveysController.html#method-i-show","()",""],["show","TimeSlotsController","TimeSlotsController.html#method-i-show","()","<p>GET /time_slots/1 GET /time_slots/1.json\n"],["sign_up","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-sign_up","(resource_name, resource)","<p>Signs in a user on sign up. You can overwrite this method in your own\nRegistrationsController.\n"],["sign_up","Users::RegistrationsController","Users/RegistrationsController.html#method-i-sign_up","(resource_name, resource)","<p>def update\n\n<pre>super</pre>\n<p>end Signs in a user on sign up. You can overwrite this method in your own\nRegistrationsController …\n"],["sign_up_params","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-sign_up_params","()",""],["sign_up_params","Users::RegistrationsController","Users/RegistrationsController.html#method-i-sign_up_params","()",""],["sign_up_stage","User","User.html#method-i-sign_up_stage","()",""],["singular_possessive","User","User.html#method-i-singular_possessive","()",""],["sort","IngredientsRecipesController","IngredientsRecipesController.html#method-i-sort","()","<p>when sortable list is adjusted, it calls this method to save new orders\n"],["sort","RecipeStepsController","RecipeStepsController.html#method-i-sort","()","<p>when sortable list is adjusted, it calls this method to save\n"],["split_allergen_by_word","Allergen","Allergen.html#method-i-split_allergen_by_word","()",""],["split_ingredient_by_word","Ingredient","Ingredient.html#method-i-split_ingredient_by_word","()",""],["stage","Appointment","Appointment.html#method-i-stage","()",""],["start_review","QualityReviewsController","QualityReviewsController.html#method-i-start_review","()",""],["start_review_conflict","ReviewConflictsController","ReviewConflictsController.html#method-i-start_review_conflict","()",""],["step_changes_hash","ReviewConflict","ReviewConflict.html#method-i-step_changes_hash","(*suggestion)",""],["steps","Recipe","Recipe.html#method-i-steps","()","<p>returns recipe steps in order\n"],["steps_by_group","Recipe","Recipe.html#method-i-steps_by_group","()","<p>returns recipe steps by group\n"],["store_dir","ImageUploader","ImageUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored. This is a\nsensible default for uploaders …\n"],["suggested_allergens","Ingredient","Ingredient.html#method-i-suggested_allergens","()","<p>returns suggested allergens for an ingredient based on if a word in the\ningredient matches a word in …\n"],["to_csv","Recipe","Recipe.html#method-i-to_csv","(options = {})",""],["to_csv","Recipe","Recipe.html#method-c-to_csv","(options = {})",""],["top_allergens","Allergen","Allergen.html#method-c-top_allergens","()",""],["unverified_health_groups","User","User.html#method-i-unverified_health_groups","()",""],["update","AllergensController","AllergensController.html#method-i-update","()","<p>PATCH/PUT /allergens/1 PATCH/PUT /allergens/1.json\n"],["update","AllergensIngredientsController","AllergensIngredientsController.html#method-i-update","()","<p>PATCH/PUT /allergens_ingredients/1 PATCH/PUT /allergens_ingredients/1.json\n"],["update","AppointmentsController","AppointmentsController.html#method-i-update","()","<p>PATCH/PUT /appointments/1 PATCH/PUT /appointments/1.json\n"],["update","ArticlesController","ArticlesController.html#method-i-update","()","<p>PATCH/PUT /articles/1 PATCH/PUT /articles/1.json\n"],["update","AvailabilitiesController","AvailabilitiesController.html#method-i-update","()","<p>PATCH/PUT /availabilities/1 PATCH/PUT /availabilities/1.json\n"],["update","CharacteristicsController","CharacteristicsController.html#method-i-update","()","<p>PATCH/PUT /characteristics/1 PATCH/PUT /characteristics/1.json\n"],["update","ContentQuotasController","ContentQuotasController.html#method-i-update","()","<p>PATCH/PUT /content_quota/1 PATCH/PUT /content_quota/1.json\n"],["update","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-update","()","<p>PUT /resource We need to use a copy of the resource because we don&#39;t\nwant to change the current user …\n"],["update","FamiliesController","FamiliesController.html#method-i-update","()","<p>PATCH/PUT /families/1 PATCH/PUT /families/1.json\n"],["update","ImagesController","ImagesController.html#method-i-update","()","<p>PATCH/PUT /images/1 PATCH/PUT /images/1.json\n"],["update","IngredientsController","IngredientsController.html#method-i-update","()","<p>PATCH/PUT /ingredients/1 PATCH/PUT /ingredients/1.json\n"],["update","IngredientsRecipesController","IngredientsRecipesController.html#method-i-update","()","<p>PATCH/PUT /ingredients_recipes/1 PATCH/PUT /ingredients_recipes/1.json\n"],["update","MarketingItemsController","MarketingItemsController.html#method-i-update","()","<p>PATCH/PUT /articles/:id/marketing_item/:id PATCH/PUT\n/articles/:id/marketing_item/:id.json\n"],["update","MemberPlansController","MemberPlansController.html#method-i-update","()","<p>PATCH/PUT /member_plans/1 PATCH/PUT /member_plans/1.json\n"],["update","PatientGroupsController","PatientGroupsController.html#method-i-update","()","<p>PATCH/PUT /patient_groups/1 PATCH/PUT /patient_groups/1.json\n"],["update","PlansController","PlansController.html#method-i-update","()","<p>PATCH/PUT /plans/1 PATCH/PUT /plans/1.json\n"],["update","QualityReviewsController","QualityReviewsController.html#method-i-update","()","<p>PATCH/PUT /articles/:id/quality_review/:id PATCH/PUT\n/articles/:id/quality_review/:id.json\n"],["update","QuestionsController","QuestionsController.html#method-i-update","()","<p>PATCH/PUT /questions/1 PATCH/PUT /questions/1.json\n"],["update","RecipeStepsController","RecipeStepsController.html#method-i-update","()","<p>PATCH/PUT /recipe_steps/1 PATCH/PUT /recipe_steps/1.json\n"],["update","RecipesController","RecipesController.html#method-i-update","()","<p>PATCH/PUT /recipes/1 PATCH/PUdT /recipes/1.json\n"],["update","ReviewConflictsController","ReviewConflictsController.html#method-i-update","()","<p>PATCH/PUT /review_conflicts/:id/review_conflict/:id PATCH/PUT\n/articles/:id/review_conflict/:id.json …\n"],["update","RolesController","RolesController.html#method-i-update","()","<p>PATCH/PUT /roles/1 PATCH/PUT /roles/1.json\n"],["update","SubscriptionsController","SubscriptionsController.html#method-i-update","()","<p>PATCH/PUT /subscriptions/1 PATCH/PUT /subscriptions/1.json\n"],["update","SurveysController","SurveysController.html#method-i-update","()",""],["update","TimeSlotsController","TimeSlotsController.html#method-i-update","()","<p>PATCH/PUT /time_slots/1 PATCH/PUT /time_slots/1.json\n"],["update","Users::RegistrationsController","Users/RegistrationsController.html#method-i-update","()","\n<pre>  @family_members &lt;&lt; @user\nend\n# for in-session update JS response\nget_patient_groups!\n@diseases = @diseases ...</pre>\n"],["update_allergens","IngredientsController","IngredientsController.html#method-i-update_allergens","()",""],["update_assignments","RolesController","RolesController.html#method-i-update_assignments","()","<p>GET /roles/assignments/update/:id :id = dietitian_id\n"],["update_needs_confirmation?","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-update_needs_confirmation-3F","(resource, previous)",""],["update_patient_groups","RecipesController","RecipesController.html#method-i-update_patient_groups","()",""],["update_recipe_categories","RecipesController","RecipesController.html#method-i-update_recipe_categories","()",""],["update_resource","Dietitians::RegistrationsController","Dietitians/RegistrationsController.html#method-i-update_resource","(resource, params)","<p>By default we want to require a password checks on update. You can\noverwrite this method in your own …\n"],["update_schedule","AvailabilitiesController","AvailabilitiesController.html#method-i-update_schedule","()","<p>PATCH/PUT /availabilities/update_schedule PATCH/PUT\n/availabilities/update_schedule.json\n"],["update_with_payment","Appointment","Appointment.html#method-i-update_with_payment","(credit_card_usage)",""],["uppercase_name","User","User.html#method-i-uppercase_name","()",""],["weight","User","User.html#method-i-weight","()",""],["weight_hash","User","User.html#method-i-weight_hash","()","<p>returns weight_hash = {&#39;pounds&#39;=&gt; ##, &#39;ounces&#39; =&gt; ##}\n"],["README","","README_rdoc.html","","<p>## Set up Rails envirenment on AWS This README file explains how to set up\nthe AWS EC2 instance with …\n"]]}}